apply plugin: 'com.android.library'

dependencies {
    compile project(':vtm')
    compile 'com.caverock:androidsvg:1.2.2-beta-1'
    releaseCompile project(path: ':core', configuration: 'release')
    debugCompile project(path: ':core', configuration: 'debug')
}

android {
    compileSdkVersion androidCompileSdk()
    buildToolsVersion = '25.0.0'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        versionCode versionCode()
        versionName versionName()
        minSdkVersion androidMinSdk()
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions { abortOnError false }
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals("debug")) {
        print "Skipping debug jar"
        return; // Skip debug builds.
    }

    def jar = project.tasks.create "jar${name.capitalize()}", Jar
    jar.dependsOn variant.javaCompile
    jar.from variant.javaCompile.destinationDir
    artifacts.add('archives', jar);

    file('natives').eachDir() { dir ->
        def nativesJar = project.tasks.create "nativesJar${name.capitalize()}-${dir.name}", Jar
        nativesJar.classifier = "natives-${dir.name}"
        nativesJar.from(dir.path)
        artifacts.add('archives', nativesJar);
    }

    def fatJar = project.tasks.create "fatJar${name.capitalize()}", Jar
    fatJar.classifier = 'jar-with-dependencies'
    fatJar.dependsOn variant.javaCompile
    fatJar.from variant.javaCompile.destinationDir
    fatJar.from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    file('natives').eachDir() { dir ->
        fatJar.from(dir.path)
    }
    artifacts.add('archives', fatJar);
}

if (project.hasProperty("SONATYPE_USERNAME")) {
    afterEvaluate {
        project.apply from: "${rootProject.projectDir}/deploy.gradle"
    }
}
